#!/usr/bin/env perl
# --- twitter > followingers
use strict; use warnings;

use lib qw(lib);
use Twitter_Util;
use Verbose; $kVerbose = $ENV{'VERBOSE'} || 0;

my $UserAgent = 'curated-tag-feed';

=notes
    request_url => 'https://api.twitter.com/oauth/request_token',
    Access token URL: https://api.twitter.com/oauth/access_token
    Authorize URL: https://api.twitter.com/oauth/authorize
=cut

sub main {
    die "No curated-twitter given" if !$ARGV[0];
    my $curated_feed = Model::CuratedFeed->find({ twitter_account => $ARGV[0]});

    my $next_cursor = -1;
    while ($next_cursor = get_followed($next_cursor, $curated_feed)) { vverbose 0,"Cursor $next_cursor";}
    }

sub get_followed {
    my ($next_cursor, $curated_feed) = @_;

    # FIXME we should cache this...
    my $results = twitter_query(
      $curated_feed,
      'https://api.twitter.com/1/statuses/friends.json',
      screen_name => $curated_feed->twitter_account, # FIXME: the id, not name
      cursor => $next_cursor,
      # include_entities => 'true', # essentially, parsed last message
      # see result[].status.entities.hashtags[].text==bmoreevent, indices[] 
      # we could look at result[].statuses_count for "tweets since last time"
      );

    $next_cursor = $results->{'next_cursor'};

    foreach (@{$results->{'users'}}) {
      print $_->{'screen_name'},"\n";
      }

    return $next_cursor;
    }

main() if $0 eq __FILE__
